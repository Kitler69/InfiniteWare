local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\111\76","\227\65\98\85\141\160"),function(v42) if (v9(v42,2)==81) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==1) then return v123;end if (v122==0) then v123=v13(v102,v30);v30=nil;v122=1;end end else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=0;local v104;while true do if (v103==0) then v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v104-(v104%1) ;end end else local v105=0;local v106;while true do if (v105==0) then v106=2^(v44-1) ;return (((v43%(v106 + v106))>=v106) and 1) or (0 -0) ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + (2 -1) ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;return (v53 * 16777216) + (v52 * 65536) + (v51 * (659 -403)) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==3) then if (v59==0) then if (v58==0) then return v60 * 0 ;else local v124=0;while true do if (v124==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * ((928 -(214 + 713))/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end if (v54==1) then v57=1;v58=(v31(v56,1,20) * (2^32)) + v55 ;v54=2;end if (v54==2) then v59=v31(v56,640 -(555 + 64) ,962 -(857 + 74) );v60=((v31(v56,32)==1) and  -(569 -(367 + 201))) or 1 ;v54=3;end if (v54==0) then v55=v34();v56=v34();v54=1;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==2) then v64={};for v114=1, #v63 do v64[v114]=v10(v9(v11(v63,v114,v114)));end v62=3;end if (v62==0) then v63=nil;if  not v61 then local v120=0;while true do if (v120==0) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end if (v62==3) then return v14(v64);end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=(0 + 0) ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[1 + 2 ]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==(877 -(282 + 595))) then local v110=0;local v111;local v112;local v113;while true do if (3==v110) then if (v31(v112,3,3)==1) then v113[4]=v70[v113[4]];end v65[v82]=v113;break;end if (v110==1) then v113={v33(),v33(),nil,nil};if (v111==0) then local v127=0;while true do if (v127==0) then v113[3]=v33();v113[1069 -(68 + 997) ]=v33();break;end end elseif (v111==1) then v113[3]=v34();elseif (v111==2) then v113[3]=v34() -(2^16) ;elseif (v111==(1273 -(226 + 1044))) then local v136=0;while true do if (v136==0) then v113[3]=v34() -(2^(69 -53)) ;v113[4]=v33();break;end end end v110=2;end if (2==v110) then if (v31(v112,1,1)==1) then v113[119 -(32 + 85) ]=v70[v113[2]];end if (v31(v112,2,2)==1) then v113[3]=v70[v113[3]];end v110=3;end if (0==v110) then v111=v31(v83,2,1640 -(1523 + 114) );v112=v31(v83,4,6);v110=1;end end end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -(1 + 0);local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v107=0,v94 do if (v107>=v88) then v92[v107-v88 ]=v93[v107 + 1 ];else v96[v107]=v93[v107 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=52) then if (v99<=25) then if (v99<=12) then if (v99<=(2 + 3)) then if (v99<=(959 -(892 + 65))) then if (v99<=0) then local v137=0;local v138;while true do if (v137==0) then v138=v98[4 -2 ];v96[v138](v21(v96,v138 + 1 ,v98[3]));break;end end elseif (v99>1) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else local v178=0;local v179;local v180;while true do if (1==v178) then for v463=v179 + 1 ,v91 do v15(v180,v96[v463]);end break;end if (0==v178) then v179=v98[2];v180=v96[v179];v178=1;end end end elseif (v99<=3) then v96[v98[2]]=v73[v98[3]];elseif (v99>4) then local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==0) then v182=v98[2];v183,v184=v89(v96[v182](v21(v96,v182 + 1 ,v98[3])));v181=1;end if (v181==2) then for v464=v182,v91 do local v465=0;while true do if (v465==0) then v185=v185 + 1 ;v96[v464]=v183[v185];break;end end end break;end if (v181==1) then v91=(v184 + v182) -1 ;v185=0;v181=2;end end else v96[v98[2]]=v73[v98[3]];end elseif (v99<=8) then if (v99<=(10 -4)) then v96[v98[2]]=v98[4 -1 ];elseif (v99>7) then local v188=0;local v189;while true do if (v188==0) then v189=v98[2];v96[v189]=v96[v189](v21(v96,v189 + 1 ,v91));break;end end else do return;end end elseif (v99<=10) then if (v99==9) then v96[v98[2]]=v40(v87[v98[3]],nil,v74);else v96[v98[2]][v98[3]]=v96[v98[354 -(87 + 263) ]];end elseif (v99>11) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[183 -(67 + 113) ];end else local v193=0;local v194;local v195;local v196;while true do if (v193==1) then v196=v98[3];for v466=1,v196 do v195[v466]=v96[v194 + v466 ];end break;end if (v193==0) then v194=v98[2 + 0 ];v195=v96[v194];v193=1;end end end elseif (v99<=18) then if (v99<=15) then if (v99<=13) then v96[v98[2]]=v98[7 -4 ]~=(0 + 0) ;elseif (v99==(55 -41)) then v96[v98[2]]=v96[v98[955 -(802 + 150) ]] + v96[v98[4]] ;else local v198=0;local v199;local v200;while true do if (v198==1) then v96[v199 + (1 -0) ]=v200;v96[v199]=v200[v98[4]];break;end if (v198==0) then v199=v98[2];v200=v96[v98[7 -4 ]];v198=1;end end end elseif (v99<=16) then local v144=0;local v145;local v146;while true do if (v144==1) then for v371=1, #v95 do local v372=0;local v373;while true do if (v372==0) then v373=v95[v371];for v513=0, #v373 do local v514=0;local v515;local v516;local v517;while true do if (v514==1) then v517=v515[2 + 0 ];if ((v516==v96) and (v517>=v145)) then local v558=0;while true do if (v558==0) then v146[v517]=v516[v517];v515[1]=v146;break;end end end break;end if (0==v514) then v515=v373[v513];v516=v515[1];v514=1;end end end break;end end end break;end if (v144==0) then v145=v98[2];v146={};v144=1;end end elseif (v99==17) then local v201=0;local v202;local v203;local v204;local v205;while true do if (0==v201) then v202=v98[999 -(915 + 82) ];v203,v204=v89(v96[v202](v21(v96,v202 + 1 ,v98[3])));v201=1;end if (v201==2) then for v469=v202,v91 do v205=v205 + 1 ;v96[v469]=v203[v205];end break;end if (v201==1) then v91=(v204 + v202) -1 ;v205=0;v201=2;end end else v96[v98[2]]={};end elseif (v99<=21) then if (v99<=19) then v96[v98[5 -3 ]]=v96[v98[3]]%v98[4] ;elseif (v99>20) then v96[v98[2]]=v40(v87[v98[3]],nil,v74);else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=23) then if (v99==22) then v96[v98[2]]=v74[v98[3]];else local v212=0;local v213;local v214;local v215;local v216;while true do if (1==v212) then v91=(v215 + v213) -1 ;v216=0;v212=2;end if (v212==2) then for v472=v213,v91 do local v473=0;while true do if (0==v473) then v216=v216 + 1 + 0 ;v96[v472]=v214[v216];break;end end end break;end if (v212==0) then v213=v98[2];v214,v215=v89(v96[v213](v21(v96,v213 + 1 ,v91)));v212=1;end end end elseif (v99==24) then local v217=v98[2];v96[v217]=v96[v217](v21(v96,v217 + 1 ,v98[3 -0 ]));else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=38) then if (v99<=31) then if (v99<=28) then if (v99<=26) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99>27) then local v220=0;local v221;while true do if (v220==0) then v221=v98[2];v96[v221]=v96[v221](v21(v96,v221 + 1 ,v91));break;end end else local v222=0;local v223;local v224;local v225;local v226;while true do if (v222==2) then for v474=v223,v91 do local v475=0;while true do if (v475==0) then v226=v226 + 1 ;v96[v474]=v224[v226];break;end end end break;end if (v222==1) then v91=(v225 + v223) -1 ;v226=1187 -(1069 + 118) ;v222=2;end if (0==v222) then v223=v98[2];v224,v225=v89(v96[v223](v21(v96,v223 + 1 ,v91)));v222=1;end end end elseif (v99<=(65 -36)) then local v149=0;local v150;while true do if (v149==0) then v150=v98[2];do return v96[v150](v21(v96,v150 + 1 ,v98[3]));end break;end end elseif (v99==30) then v96[v98[2]]= #v96[v98[3]];else v74[v98[3]]=v96[v98[3 -1 ]];end elseif (v99<=34) then if (v99<=(6 + 26)) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99>33) then local v230=v98[2];local v231=v96[v230];for v349=v230 + 1 ,v98[3] do v15(v231,v96[v349]);end else local v232=v98[2];local v233=v98[4];local v234=v232 + 2 ;local v235={v96[v232](v96[v232 + 1 ],v96[v234])};for v350=1,v233 do v96[v234 + v350 ]=v235[v350];end local v236=v235[1];if v236 then local v374=0;while true do if (v374==0) then v96[v234]=v236;v90=v98[4 -1 ];break;end end else v90=v90 + 1 ;end end elseif (v99<=(36 + 0)) then if (v99==35) then v96[v98[793 -(368 + 423) ]]=v96[v98[3]][v98[4]];else v96[v98[2]]=v98[9 -6 ]~=(18 -(10 + 8)) ;end elseif (v99>37) then local v240=0;local v241;local v242;local v243;local v244;while true do if (1==v240) then v91=(v243 + v241) -1 ;v244=0;v240=2;end if (v240==0) then v241=v98[2];v242,v243=v89(v96[v241](v96[v241 + 1 ]));v240=1;end if (v240==2) then for v476=v241,v91 do local v477=0;while true do if (v477==0) then v244=v244 + 1 ;v96[v476]=v242[v244];break;end end end break;end end else local v245=0;local v246;local v247;local v248;while true do if (v245==0) then v246=v98[2];v247=v96[v246];v245=1;end if (v245==1) then v248=v96[v246 + 2 ];if (v248>0) then if (v247>v96[v246 + 1 ]) then v90=v98[3];else v96[v246 + 3 ]=v247;end elseif (v247<v96[v246 + 1 ]) then v90=v98[3];else v96[v246 + 3 ]=v247;end break;end end end elseif (v99<=(172 -127)) then if (v99<=41) then if (v99<=39) then v96[v98[2]]=v96[v98[3]];elseif (v99>40) then local v249=0;local v250;while true do if (v249==0) then v250=v98[2];do return v21(v96,v250,v91);end break;end end elseif (v96[v98[2]]==v98[4]) then v90=v90 + (443 -(416 + 26)) ;else v90=v98[3];end elseif (v99<=43) then if (v99>42) then local v251=0;local v252;while true do if (0==v251) then v252=v98[2];do return v96[v252](v21(v96,v252 + 1 ,v98[3]));end break;end end else local v253=0;local v254;while true do if (v253==0) then v254=v98[2];v96[v254]=v96[v254]();break;end end end elseif (v99==44) then local v255=0;local v256;while true do if (0==v255) then v256=v98[6 -4 ];v96[v256](v96[v256 + 1 ]);break;end end elseif (v96[v98[2]]~=v98[2 + 2 ]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=48) then if (v99<=46) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>47) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=50) then if (v99==49) then v74[v98[3]]=v96[v98[2]];else for v353=v98[2],v98[3] do v96[v353]=nil;end end elseif (v99>51) then v96[v98[2]][v98[3]]=v98[4];else local v262=0;local v263;while true do if (v262==0) then v263=v98[2];v96[v263]=v96[v263]();break;end end end elseif (v99<=79) then if (v99<=65) then if (v99<=58) then if (v99<=55) then if (v99<=53) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>54) then v96[v98[2]]();else do return v96[v98[2]]();end end elseif (v99<=56) then v96[v98[2]]= #v96[v98[4 -1 ]];elseif (v99>57) then v96[v98[2]]=v96[v98[441 -(145 + 293) ]]%v98[4] ;else local v266=0;local v267;local v268;while true do if (v266==0) then v267=v98[2];v268=v96[v267];v266=1;end if (1==v266) then for v478=v267 + 1 ,v91 do v15(v268,v96[v478]);end break;end end end elseif (v99<=61) then if (v99<=59) then v96[v98[2]][v96[v98[3]]]=v98[434 -(44 + 386) ];elseif (v99>60) then local v269=0;local v270;local v271;local v272;while true do if (v269==1) then v272=v96[v270 + 2 ];if (v272>0) then if (v271>v96[v270 + 1 ]) then v90=v98[3];else v96[v270 + 3 ]=v271;end elseif (v271<v96[v270 + 1 ]) then v90=v98[3];else v96[v270 + 3 ]=v271;end break;end if (v269==0) then v270=v98[2];v271=v96[v270];v269=1;end end else v96[v98[2]]=v96[v98[3]];end elseif (v99<=63) then if (v99==62) then v96[v98[2]]=v96[v98[1489 -(998 + 488) ]]%v96[v98[4]] ;elseif  not v96[v98[2]] then v90=v90 + 1 + 0 ;else v90=v98[3];end elseif (v99==64) then local v276=0;local v277;while true do if (v276==0) then v277=v98[2];v96[v277]=v96[v277](v21(v96,v277 + 1 ,v98[3]));break;end end else local v278=v98[2];local v279=v96[v278 + 2 ];local v280=v96[v278] + v279 ;v96[v278]=v280;if (v279>0) then if (v280<=v96[v278 + 1 ]) then v90=v98[3];v96[v278 + 3 ]=v280;end elseif (v280>=v96[v278 + 1 ]) then local v481=0;while true do if (v481==0) then v90=v98[3];v96[v278 + 3 ]=v280;break;end end end end elseif (v99<=72) then if (v99<=68) then if (v99<=(55 + 11)) then for v174=v98[2],v98[3] do v96[v174]=nil;end elseif (v99>67) then do return;end else local v282=0;local v283;while true do if (v282==0) then v283=v98[774 -(201 + 571) ];v96[v283]=v96[v283](v96[v283 + 1 ]);break;end end end elseif (v99<=70) then if (v99>69) then v96[v98[1140 -(116 + 1022) ]]=v96[v98[3]] + v98[4] ;else local v285=0;local v286;while true do if (v285==0) then v286=v98[2];v96[v286]=v96[v286](v96[v286 + 1 ]);break;end end end elseif (v99==71) then local v287=0;local v288;local v289;while true do if (v287==0) then v288=v98[2];v289={};v287=1;end if (v287==1) then for v482=1, #v95 do local v483=0;local v484;while true do if (v483==0) then v484=v95[v482];for v546=0, #v484 do local v547=v484[v546];local v548=v547[1];local v549=v547[2];if ((v548==v96) and (v549>=v288)) then local v555=0;while true do if (v555==0) then v289[v549]=v548[v549];v547[4 -3 ]=v289;break;end end end end break;end end end break;end end else v96[v98[2]]=v98[3] + v96[v98[3 + 1 ]] ;end elseif (v99<=(273 -198)) then if (v99<=73) then do return v96[v98[2]]();end elseif (v99==74) then local v291=0;local v292;local v293;local v294;while true do if (v291==0) then v292=v98[7 -5 ];v293=v96[v292];v291=1;end if (1==v291) then v294=v98[3];for v485=1,v294 do v293[v485]=v96[v292 + v485 ];end break;end end else v96[v98[861 -(814 + 45) ]]=v96[v98[3]] + v98[4] ;end elseif (v99<=77) then if (v99>76) then v96[v98[2]]=v96[v98[3]][v96[v98[4]]];else local v298=v98[2];v96[v298](v96[v298 + 1 ]);end elseif (v99>78) then local v299=0;local v300;local v301;while true do if (0==v299) then v300=v98[2];v301=v96[v98[3]];v299=1;end if (v299==1) then v96[v300 + (2 -1) ]=v301;v96[v300]=v301[v96[v98[4]]];break;end end elseif (v98[2]==v96[v98[1 + 3 ]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=92) then if (v99<=85) then if (v99<=82) then if (v99<=80) then local v158=0;local v159;local v160;local v161;while true do if (v158==1) then v161={};v160=v18({},{[v7("\202\218\37\48\199\240\253","\163\149\133\76\94")]=function(v381,v382) local v383=0;local v384;while true do if (v383==0) then v384=v161[v382];return v384[1][v384[2]];end end end,[v7("\159\50\33\35\226\61\216\164\8\55","\182\192\109\79\70\149\84")]=function(v385,v386,v387) local v388=0;local v389;while true do if (v388==0) then v389=v161[v386];v389[1][v389[2]]=v387;break;end end end});v158=2;end if (v158==2) then for v390=1,v98[4] do local v391=0;local v392;while true do if (1==v391) then if (v392[1 + 0 ]==60) then v161[v390-(886 -(261 + 624)) ]={v96,v392[3]};else v161[v390-1 ]={v73,v392[3]};end v95[ #v95 + (1081 -(1020 + 60)) ]=v161;break;end if (0==v391) then v90=v90 + 1 ;v392=v86[v90];v391=1;end end end v96[v98[2]]=v40(v159,v160,v74);break;end if (0==v158) then v159=v87[v98[3]];v160=nil;v158=1;end end elseif (v99>81) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else local v302=0;local v303;local v304;local v305;while true do if (2==v302) then for v488=3 -2 ,v98[4] do local v489=0;local v490;while true do if (v489==1) then if (v490[1]==60) then v305[v488-1 ]={v96,v490[3]};else v305[v488-1 ]={v73,v490[3]};end v95[ #v95 + 1 ]=v305;break;end if (v489==0) then v90=v90 + 1 ;v490=v86[v90];v489=1;end end end v96[v98[2]]=v40(v303,v304,v74);break;end if (v302==0) then v303=v87[v98[1426 -(630 + 793) ]];v304=nil;v302=1;end if (v302==1) then v305={};v304=v18({},{[v7("\255\101\228\54\4\197\66","\96\160\58\141\88")]=function(v491,v492) local v493=v305[v492];return v493[1][v493[2]];end,[v7("\132\254\189\86\26\178\207\183\86\21","\109\219\161\211\51")]=function(v494,v495,v496) local v497=0;local v498;while true do if (v497==0) then v498=v305[v495];v498[1][v498[2]]=v496;break;end end end});v302=2;end end end elseif (v99<=83) then v96[v98[2]][v98[3]]=v98[4];elseif (v99>(397 -313)) then local v306=0;local v307;while true do if (v306==0) then v307=v98[2];v96[v307](v21(v96,v307 + 1 ,v91));break;end end else local v308=v98[2];local v309=v98[4];local v310=v308 + 2 ;local v311={v96[v308](v96[v308 + 1 ],v96[v310])};for v357=1,v309 do v96[v310 + v357 ]=v311[v357];end local v312=v311[1];if v312 then v96[v310]=v312;v90=v98[3];else v90=v90 + 1 ;end end elseif (v99<=88) then if (v99<=86) then local v164=0;local v165;local v166;while true do if (v164==0) then v165=v98[2];v166=v96[v98[3]];v164=1;end if (1==v164) then v96[v165 + 1 ]=v166;v96[v165]=v166[v98[4]];break;end end elseif (v99>87) then v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;else v96[v98[6 -4 ]][v98[3]]=v96[v98[4]];end elseif (v99<=90) then if (v99==89) then v96[v98[1749 -(760 + 987) ]]();else v96[v98[2]]=v98[3];end elseif (v99==91) then local v318=0;local v319;while true do if (v318==0) then v319=v98[2];v96[v319](v21(v96,v319 + 1 ,v98[1916 -(1789 + 124) ]));break;end end else local v320=0;local v321;while true do if (v320==0) then v321=v98[2];do return v21(v96,v321,v91);end break;end end end elseif (v99<=99) then if (v99<=95) then if (v99<=(859 -(745 + 21))) then v96[v98[2]]=v96[v98[3]][v96[v98[4]]];elseif (v99>94) then v96[v98[2]]={};else local v323=0;local v324;while true do if (v323==0) then v324=v98[1 + 1 ];v96[v324](v21(v96,v324 + 1 ,v91));break;end end end elseif (v99<=97) then if (v99==(263 -167)) then local v325=0;local v326;local v327;local v328;while true do if (v325==1) then v328=v96[v326] + v327 ;v96[v326]=v328;v325=2;end if (v325==2) then if (v327>0) then if (v328<=v96[v326 + 1 ]) then v90=v98[3];v96[v326 + 3 ]=v328;end elseif (v328>=v96[v326 + 1 ]) then local v545=0;while true do if (v545==0) then v90=v98[3];v96[v326 + 3 ]=v328;break;end end end break;end if (v325==0) then v326=v98[2];v327=v96[v326 + 2 ];v325=1;end end else local v329=v98[2];local v330={v96[v329](v21(v96,v329 + 1 ,v91))};local v331=0;for v365=v329,v98[4] do local v366=0;while true do if (v366==0) then v331=v331 + 1 ;v96[v365]=v330[v331];break;end end end end elseif (v99>98) then v90=v98[3];else v96[v98[7 -5 ]][v96[v98[3]]]=v96[v98[1 + 3 ]];end elseif (v99<=(81 + 21)) then if (v99<=100) then local v169=0;local v170;local v171;local v172;local v173;while true do if (v169==2) then for v396=v170,v91 do local v397=0;while true do if (v397==0) then v173=v173 + 1 ;v96[v396]=v171[v173];break;end end end break;end if (v169==0) then v170=v98[1057 -(87 + 968) ];v171,v172=v89(v96[v170](v96[v170 + 1 ]));v169=1;end if (v169==1) then v91=(v172 + v170) -(4 -3) ;v173=0;v169=2;end end elseif (v99>101) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v90=v98[3];end elseif (v99<=104) then if (v99>103) then v96[v98[2]]=v74[v98[3]];else local v338=v98[2];local v339={v96[v338](v21(v96,v338 + (2 -1) ,v91))};local v340=0;for v368=v338,v98[4] do local v369=0;while true do if (v369==0) then v340=v340 + 1 ;v96[v368]=v339[v340];break;end end end end elseif (v99==105) then if (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else local v341=0;local v342;local v343;while true do if (v341==1) then v96[v342 + 1 ]=v343;v96[v342]=v343[v96[v98[4]]];break;end if (v341==0) then v342=v98[2];v343=v96[v98[3]];v341=1;end end end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vleft)
