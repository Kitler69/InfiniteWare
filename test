repeat task.wait() until game:IsLoaded()
getgenv().AutoFish = false
getgenv().autoShake = false
getgenv().autoReel = false
getgenv().noclip = false
getgenv().day = false
getgenv().ZoneCast = false
getgenv().HardWater = false
getgenv().WebhookLog = false
local VirtualUser = game:GetService("VirtualUser")
local CoreGui = game:GetService('StarterGui')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local ContextActionService = game:GetService('ContextActionService')
local VirtualInputManager = game:GetService('VirtualInputManager')
local GuiService = game:GetService('GuiService')
local lp = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local Mouse = lp:GetMouse()
local PlayerGUI = lp:FindFirstChildOfClass("PlayerGui")
local Lighting = game:GetService("Lighting")
local Interactables = workspace.world:FindFirstChild("interactables")
local ActiveFolder = workspace:FindFirstChild("active")
local NPCs = workspace:WaitForChild("world"):WaitForChild("npcs")
local RenderStepped = RunService.RenderStepped
local WaitForSomeone = RenderStepped.Wait
local teleportSpots = {}
local NPCs = {}
local FishingZonesFolder = Workspace:FindFirstChild("zones"):WaitForChild("fishing")
local TpSpotsFolder = Workspace:FindFirstChild("world"):WaitForChild("spawns"):WaitForChild("TpSpots")
local NpcFolder = Workspace:FindFirstChild("world"):WaitForChild("npcs")
local chestFolder = Workspace:FindFirstChild("world"):WaitForChild("chests")
local Zone = "Brine Pool"
local deviceType = game:GetService("UserInputService").TouchEnabled and "Mobile" or "PC"

lp.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)
print("Anti AFK Loaded")

function getCharacter()
    local character = lp.Character or lp:FindFirstChild("Character")
    return character
end
function getRoot()
    local rootPart = getCharacter():FindFirstChild('HumanoidRootPart')
    return rootPart
end

local SafeSpots = Instance.new("Part")
SafeSpots.Name = "SafeSpots"
SafeSpots.Parent = workspace
SafeSpots.Anchored = true
SafeSpots.Size = Vector3.new(5,1,5)
SafeSpots.CFrame = CFrame.new(99999,99999,9999)


for i, v in ipairs(TpSpotsFolder:GetChildren()) do
    if table.find(teleportSpots, v.Name) == nil then
        table.insert(teleportSpots, v.Name)
    end
end
for i, v in ipairs(NpcFolder:GetChildren()) do
    if table.find(NPCs, v.Name) == nil and v.Name ~= "mirror Area" then
        table.insert(NPCs, v.Name)
    end
end



FishingZonesFolder.DescendantAdded:Connect(function(child)
    if child:IsA("Part") and child.Name == "Isonade" then
		Fluent:Notify({Title = "InfiniteWare",Content = "Found " .. child.Name ,Duration = 3})	
    end
end)

local itemSpots = {
    Bait_Crate = CFrame.new(384.57513427734375, 135.3519287109375, 337.5340270996094),
    Carbon_Rod = CFrame.new(454.083618, 150.590073, 225.328827, 0.985374212, -0.170404434, 1.41561031e-07, 1.41561031e-07, 1.7285347e-06, 1, -0.170404434, -0.985374212, 1.7285347e-06),
    Crab_Cage = CFrame.new(470.425049, 150.528564, 237.44725, 0.960299551, -1.54510381e-05, -0.278970838, -0.00373839214, 0.99990952, -0.0129240248, 0.278945774, 0.0134538375, 0.960212588),
    Fast_Rod = CFrame.new(447.183563, 148.225739, 220.187454, 0.981104493, 1.26492232e-05, 0.193478703, -0.0522461236, 0.962867677, 0.264870107, -0.186291039, -0.269973755, 0.944674432),
    Flimsy_Rod = CFrame.new(471.107697, 148.36171, 229.642441, 0.841614008, 0.0774728209, -0.534493923, 0.00678436086, 0.988063335, 0.153898612, 0.540036798, -0.13314943, 0.831042409),
    GPS = CFrame.new(517.896729, 149.217636, 284.856842, 7.39097595e-06, -0.719539165, -0.694451928, -1, -7.39097595e-06, -3.01003456e-06, -3.01003456e-06, 0.694451928, -0.719539165),
    Long_Rod = CFrame.new(485.695038, 171.656326, 145.746109, -0.630167365, -0.776459217, -5.33461571e-06, 5.33461571e-06, -1.12056732e-05, 1, -0.776459217, 0.630167365, 1.12056732e-05),
    Lucky_Rod = CFrame.new(446.085999, 148.253006, 222.160004, 0.974526405, -0.22305499, 0.0233404674, 0.196993902, 0.901088715, 0.386306256, -0.107199371, -0.371867687, 0.922075212),
    Plastic_Rod = CFrame.new(454.425385, 148.169739, 229.172424, 0.951755166, 0.0709736273, -0.298537821, -3.42726707e-07, 0.972884834, 0.231290117, 0.306858391, -0.220131472, 0.925948203),
    Training_Rod = CFrame.new(457.693848, 148.357529, 230.414307, 1, -0, 0, 0, 0.975410998, 0.220393807, -0, -0.220393807, 0.975410998),
    Steady_Rod = CFrame.new(-1511.23523, 139.679489, 759.417114, 0.992959678, 1.84196979e-05, -0.11845281, 0.0317781717, 0.963300347, 0.266538173, 0.114110537, -0.268425852, 0.956517816),
    Rapid_Rod = CFrame.new(-1509.24463, 139.725906, 759.628174, 0.992959678, 1.84196979e-05, -0.11845281, 0.0317781717, 0.963300347, 0.266538173, 0.114110537, -0.268425852, 0.956517816),
    Glider = CFrame.new(-1713.7937, 146.06543, 740.835449, 0.46333456, -0.0355720967, -0.885469198, -0.0949236006, 0.991453111, -0.0894999653, 0.881084919, 0.125520363, 0.455997884),
    Fortune_Rod = CFrame.new(-1520.87964, 141.283279, 771.946777, 0.220332444, -0.975424826, -5.51939011e-05, -5.51939011e-05, -6.90221786e-05, 1, -0.975424826, -0.220332414, -6.90221786e-05),
    Fish_Radar = CFrame.new(-1410.64124, 133.287048, 741.659058, -0.0123294592, 0.144285768, 0.989459455, 0.00175092369, 0.989536047, -0.144275144, -0.999922693, -4.63426113e-05, -0.0124530792),
    King_Rod = CFrame.new(1375.90063, -810.154297, -303.509247, -0.7490201, 0.662445903, -0.0116144121, -0.0837960541, -0.0773290396, 0.993478119, 0.657227278, 0.745108068, 0.113431036),
    Nocturnal_Rod = CFrame.new(-141.874237, -515.313477, 1139.04529, 0.161644459, -0.98684907, 1.87754631e-05, 1.87754631e-05, 2.21133232e-05, 1, -0.98684907, -0.161644459, 2.21133232e-05),
    Trident = CFrame.new(-1483.73755, -225.779602, -2204.89136, -0.99695009, 6.10790494e-08, 0.0780415684, 5.94823426e-08, 1, -2.27842634e-08, -0.0780415684, -1.80726776e-08, -0.99695009),
    Aurora_Totem = CFrame.new(-1810.11243, -136.927933, -3282.46777, -0.614449918, -1.07018332e-08, 0.788955867, 3.95304145e-09, 1, 1.66432379e-08, -0.788955867, 1.33452112e-08, -0.614449918),
    Quality_Bait_Crate = CFrame.new(-172.777359, 143.061646, 1928.22705, -0.81552738, 2.16515623e-08, 0.578718543, 4.79297713e-09, 1, -3.0658704e-08, -0.578718543, -2.22292265e-08, -0.81552738),
    Magnet_Rod = CFrame.new(-200.638245, 132.500015, 1931.49365, 0.142964467, -6.78827661e-08, -0.989727795, 2.29555042e-08, 1, -6.5271422e-08, 0.989727795, -1.33882061e-08, 0.142964467),
    -- Glider = CFrame.new(),
    -- Glider = CFrame.new(),
}

local yOffset = -4
function platsform()
           local jesus = Instance.new("Part")
            jesus.Name = "Jesus"
            jesus.Anchored = true
            jesus.Parent = workspace
            jesus.Size = Vector3.new(5,1,5)
            jesus.CFrame = getRoot().CFrame * CFrame.new(0, yOffset, 0)
    while WaitForSomeone(RenderStepped) do
        if getgenv().HardWater == true and getRoot() ~= nil then
            task.wait()
            jesus.CFrame = CFrame.new(getRoot().CFrame.X, jesus.CFrame.Y, getRoot().CFrame.Z)
        else
			workspace:FindFirstChild("Jesus"):Destroy()
            break
        end
    end
end
FLYING = false
QEfly = true
iyflyspeed = 1
vehicleflyspeed = 1
    
function sFLY(vfly)
        repeat wait() until lp and getCharacter() and getRoot(getCharacter()) and getCharacter():FindFirstChildOfClass("Humanoid")
        repeat wait() until Mouse
        if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
    
        local T = getRoot(getCharacter())
        local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local SPEED = 0
    
        local function FLY()
            FLYING = true
            local BG = Instance.new('BodyGyro')
            local BV = Instance.new('BodyVelocity')
            BG.P = 9e4
            BG.Parent = T
            BV.Parent = T
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            task.spawn(function()
                repeat wait()
                    if not vfly and getCharacter():FindFirstChildOfClass('Humanoid') then
                        getCharacter():FindFirstChildOfClass('Humanoid').PlatformStand = true
                    end
                    if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                        SPEED = 50
                    elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                        SPEED = 0
                    end
                    if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                        lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                    elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    else
                        BV.velocity = Vector3.new(0, 0, 0)
                    end
                    BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not FLYING
                CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                SPEED = 0
                BG:Destroy()
                BV:Destroy()
                if getCharacter():FindFirstChildOfClass('Humanoid') then
                    getCharacter():FindFirstChildOfClass('Humanoid').PlatformStand = false
                end
            end)
        end
        flyKeyDown = Mouse.KeyDown:Connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 's' then
                CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 'a' then
                CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 'd' then 
                CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
            elseif QEfly and KEY:lower() == 'e' then
                CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
            elseif QEfly and KEY:lower() == 'q' then
                CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
            end
            pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
        end)
        flyKeyUp = Mouse.KeyUp:Connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            elseif KEY:lower() == 'e' then
                CONTROL.Q = 0
            elseif KEY:lower() == 'q' then
                CONTROL.E = 0
            end
        end)
        FLY()
end


function NOFLY()
        FLYING = false
        if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
        if getCharacter():FindFirstChildOfClass('Humanoid') then
            getCharacter():FindFirstChildOfClass('Humanoid').PlatformStand = false
        end
        pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
end

function instantpp()
    game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
		fireproximityprompt(prompt)
	end)
end

RunService.Stepped:Connect(function()
    if getgenv().noclip then
        if getCharacter() ~= nil then
            for i, v in pairs(getCharacter():GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide == true then
                    v.CanCollide = false
                end
            end
        end
    end
    if getgenv().day then
		Lighting.ClockTime = 14
    end
end)
        local oldpos = getRoot().CFrame
        task.wait()
        while WaitForSomeone(RenderStepped) do
            if FreezeChar and getRoot() ~= nil then
                task.wait()
                getRoot().CFrame = oldpos
            else
                break
            end
        end

function SellFishAndReturnAll()
    local currentPosition = getRoot().CFrame
    local sellPosition = CFrame.new(464, 151, 232)
    local wasFreezeCharActive = false
    if FreezeChar then
        wasFreezeCharActive = true
        FreezeChar = false
    end
    getRoot().CFrame = sellPosition
    task.wait(2)
    if workspace.world.npcs["Marc Merchant"].merchant then
		workspace.world.npcs["Marc Merchant"].merchant:WaitForChild("sellall"):InvokeServer()
	end
    task.wait(3)

    getRoot().CFrame = currentPosition

    if wasFreezeCharActive then
        FreezeChar = true
    end
end
function SellFishAndReturnOne()
    local currentPosition = getRoot().CFrame
    local sellPosition = CFrame.new(464, 151, 232)
    local wasFreezeCharActive = false
    if FreezeChar then
        wasFreezeCharActive = true
        FreezeChar = false
    end
    getRoot().CFrame = sellPosition
    task.wait(2)
    if workspace.world.npcs["Marc Merchant"].merchant then
		workspace.world.npcs["Marc Merchant"].merchant:WaitForChild("sell"):InvokeServer()
	end
    task.wait(3)

    getRoot().CFrame = currentPosition

    if wasFreezeCharActive then
        FreezeChar = true
    end
end
function RepairMapAndReturnOne()
    local currentPosition = getRoot().CFrame
    local repairPosition = CFrame.new(-2821, 214, 1515)
    local wasFreezeCharActive = false
    if FreezeChar then
        wasFreezeCharActive = true
        FreezeChar = false
    end
    getRoot().CFrame = repairPosition
        task.wait(2)

    workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Jack Marrow"):WaitForChild("treasure"):WaitForChild("repairmap"):InvokeServer()
    task.wait(3)

    getRoot().CFrame = currentPosition

    if wasFreezeCharActive then
        FreezeChar = true
    end
end
function GetLuckAndReturn()
    local currentPosition = getRoot().CFrame
    local repairPosition = CFrame.new(-933, 224, -986)
    local wasFreezeCharActive = false
    if FreezeChar then
        wasFreezeCharActive = true
        FreezeChar = false
    end
    getRoot().CFrame = repairPosition
        task.wait(2)

    workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Merlin"):WaitForChild("Merlin"):WaitForChild("luck"):InvokeServer()
    task.wait(3)

    getRoot().CFrame = currentPosition

    if wasFreezeCharActive then
        FreezeChar = true
    end
end
function GetEnchantRelicAndReturn()
    local currentPosition = getRoot().CFrame
    local repairPosition = CFrame.new(-933, 224, -986)
    local wasFreezeCharActive = false
    if FreezeChar then
        wasFreezeCharActive = true
        FreezeChar = false
    end
    getRoot().CFrame = repairPosition
        task.wait(0.5)
    workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Merlin"):WaitForChild("Merlin"):WaitForChild("power"):InvokeServer()
    task.wait(3)

    getRoot().CFrame = currentPosition
    if wasFreezeCharActive then
        FreezeChar = true
    end
end
function GetChestAndReturnOne()
    for _,v in ipairs(chestFolder:GetDescendants()) do
		if v.Name == 'ProximityPrompt' then
			v.MaxActivationDistance = math.huge
            wait(1)
            fireproximityprompt(v)
		end
	end
end

local selectedZoneCast
function ZoneCasting()
    spawn(function()
        while getgenv().AutoZoneCast do
            if getCharacter() then
                local tool = getCharacter():FindFirstChildOfClass("Tool")
                if tool then
                    local hasBobber = tool:FindFirstChild("bobber")
                    if hasBobber then
                        local ropeConstraint = hasBobber:FindFirstChild("RopeConstraint")
                        if ropeConstraint then
                            ropeConstraint.Length = math.huge
                        end
                        local platformSize = Vector3.new(10, 1, 10)
                        local platformPositionOffset = Vector3.new(0, -4, 0)
                        -- Custom Zones
                        if selectedZoneCast == "Bluefin Tuna Abundance" then
                            local selectedZone = FishingZonesFolder:FindFirstChild("Deep Ocean")
                            if selectedZone then
                                local abundanceValue = selectedZone:FindFirstChild("Abundance")
                                if abundanceValue and abundanceValue.Value == "Bluefin Tuna" then
                                    local bobberPosition = CFrame.new(selectedZone.Position.X, 126.564, selectedZone.Position.Z)
                                    hasBobber.CFrame = bobberPosition
                                    
                                    local platform = Instance.new("Part")
                                    platform.Size = platformSize
                                    platform.Position = hasBobber.Position + platformPositionOffset
                                    platform.Anchored = true
                                    platform.Parent = hasBobber
                                    platform.BrickColor = BrickColor.new("Bright blue")
                                    platform.Transparency = 1.000
                                end
                            end
                        elseif selectedZoneCast == "Whale Shark" then
                            local selectedZone = FishingZonesFolder:FindFirstChild("Whale Shark")
                            if selectedZone then
                                local abundanceValue = selectedZone:FindFirstChild("Abundance")
                                if abundanceValue and abundanceValue.Value == "Whale Shark" then
                                    local bobberPosition = CFrame.new(selectedZone.Position.X, 126.564, selectedZone.Position.Z)
                                    hasBobber.CFrame = bobberPosition
                                    
                                    local platform = Instance.new("Part")
                                    platform.Size = platformSize
                                    platform.Position = hasBobber.Position + platformPositionOffset
                                    platform.Anchored = true
                                    platform.Parent = hasBobber
                                    platform.BrickColor = BrickColor.new("Bright blue")
                                    platform.Transparency = 1.000
                                end
                            end
                        elseif selectedZoneCast == "Swordfish Abundance" then
                            local selectedZone = FishingZonesFolder:FindFirstChild("Deep Ocean")
                            if selectedZone then
                                local abundanceValue = selectedZone:FindFirstChild("Abundance")
                                if abundanceValue and abundanceValue.Value == "Swordfish" then
                                    local bobberPosition = CFrame.new(selectedZone.Position.X, 126.564, selectedZone.Position.Z)
                                    hasBobber.CFrame = bobberPosition
                                    
                                    local platform = Instance.new("Part")
                                    platform.Size = platformSize
                                    platform.Position = hasBobber.Position + platformPositionOffset
                                    platform.Anchored = true
                                    platform.Parent = hasBobber
                                    platform.BrickColor = BrickColor.new("Bright blue")
                                    platform.Transparency = 1.000
                                end
                            end
                        elseif selectedZoneCast == "Chinook Salmon Abundance" then
                            local selectedZone = FishingZonesFolder:FindFirstChild("Deep Ocean")
                            if selectedZone then
                                local abundanceValue = selectedZone:FindFirstChild("Abundance")
                                if abundanceValue and abundanceValue.Value == "Chinook Salmon" then
                                    local bobberPosition = CFrame.new(selectedZone.Position.X, 126.564, selectedZone.Position.Z)
                                    hasBobber.CFrame = bobberPosition
                                    
                                    local platform = Instance.new("Part")
                                    platform.Size = platformSize
                                    platform.Position = hasBobber.Position + platformPositionOffset
                                    platform.Anchored = true
                                    platform.Parent = hasBobber
                                    platform.BrickColor = BrickColor.new("Bright blue")
                                    platform.Transparency = 1.000
                                end
                            end
                        elseif selectedZoneCast == "Nurse Shark Abundance" then
                            local selectedZone = FishingZonesFolder:FindFirstChild("Roslit Bay")
                            if selectedZone then
                                local abundanceValue = selectedZone:FindFirstChild("Abundance")
                                if abundanceValue and abundanceValue.Value == "Nurse Shark" then
                                    local bobberPosition = CFrame.new(selectedZone.Position.X, 126.564, selectedZone.Position.Z)
                                    hasBobber.CFrame = bobberPosition
                                    
                                    local platform = Instance.new("Part")
                                    platform.Size = platformSize
                                    platform.Position = hasBobber.Position + platformPositionOffset
                                    platform.Anchored = true
                                    platform.Parent = hasBobber
                                    platform.BrickColor = BrickColor.new("Bright blue")
                                    platform.Transparency = 1.000
                                end
                            end
                        else
                            -- Default Zones
                            local selectedZone = FishingZonesFolder:FindFirstChild(selectedZoneCast)
                                local bobberPosition
                                if selectedZoneCast == "Isonade" then
                                    bobberPosition = CFrame.new(selectedZone.Position.X, 126, selectedZone.Position.Z)
                                elseif selectedZoneCast == "Captain Goldfish" then
                                    bobberPosition = CFrame.new(-2699, 159, 1746)
                                elseif selectedZoneCast == "Ice Cave" then
                                    bobberPosition = CFrame.new(2835, 121, 2701)
                                elseif selectedZoneCast == "Golden Seahorse Abundance" then
                                    bobberPosition = CFrame.new(-3072, 125, 1487)
                                elseif selectedZoneCast == "Popular Zone" then
                                    bobberPosition = CFrame.new(-802, 122, 1185)
                                elseif selectedZoneCast == "Deep Ocean" then
                                    bobberPosition = CFrame.new(1521, 126, -3543)
                                elseif selectedZoneCast == "Desolate Deep" then
                                    bobberPosition = CFrame.new(-1068, 126, -3108)
                                elseif selectedZoneCast == "Harvesters Spike" then
                                    bobberPosition = CFrame.new(-1234, 126, 1748)
                                elseif selectedZoneCast == "Moosewood Docks" then
                                    bobberPosition = CFrame.new(345, 126, 214)
                                elseif selectedZoneCast == "Moosewood Ocean" then
                                    bobberPosition = CFrame.new(890, 126, 465)
                                elseif selectedZoneCast == "Moosewood Ocean Mythical" then
                                    bobberPosition = CFrame.new(270, 126, 52)
                                elseif selectedZoneCast == "Moosewood Pond" then
                                    bobberPosition = CFrame.new(526, 126, 305)
                                elseif selectedZoneCast == "Mushgrove Water" then
                                    bobberPosition = CFrame.new(2541, 126, -792)
                                elseif selectedZoneCast == "Ocean" then
                                    bobberPosition = CFrame.new(-5712, 126, 4059)
                                elseif selectedZoneCast == "Roslit Bay" then
                                    bobberPosition = CFrame.new(-1650, 126, 504)
                                elseif selectedZoneCast == "Roslit Bay Ocean" then
                                    bobberPosition = CFrame.new(-1825, 126, 946)
                                elseif selectedZoneCast == "Roslit Pond" then
                                    bobberPosition = CFrame.new(-1807, 141, 599)
                                elseif selectedZoneCast == "Roslit Pond Seaweed" then
                                    bobberPosition = CFrame.new(-1804, 141, 625)
                                elseif selectedZoneCast == "Scallop Ocean" then
                                    bobberPosition = CFrame.new(16, 126, 730)
                                elseif selectedZoneCast == "Snowcap Ocean" then
                                    bobberPosition = CFrame.new(2308, 126, 2200)
                                elseif selectedZoneCast == "Snowcap Pond" then
                                    bobberPosition = CFrame.new(2777, 275, 2605)
                                elseif selectedZoneCast == "Sunstone" then
                                    bobberPosition = CFrame.new(-645, 126, -955)
                                elseif selectedZoneCast == "Terrapin Ocean" then
                                    bobberPosition = CFrame.new(-57, 126, 2011)
                                elseif selectedZoneCast == "The Arch" then
                                    bobberPosition = CFrame.new(1076, 126, -1202)
                                elseif selectedZoneCast == "Vertigo" then
                                    bobberPosition = CFrame.new(-75, -740, 1200)
                                end

                                hasBobber.CFrame = bobberPosition
                                
                                local platform = Instance.new("Part")
                                platform.Size = platformSize
                                platform.Position = hasBobber.Position + platformPositionOffset
                                platform.Anchored = true
                                platform.Parent = hasBobber
                                platform.BrickColor = BrickColor.new("Bright blue")
                                platform.Transparency = 1.000
                        end
                    else
                    end
                else
                end
            end
            task.wait(0.01)
        end
    end)
end
local WebhookUrl
local WebhookDelay
function WebhookManager()
    spawn(function()
        while getgenv().WebhookLog do
            task.wait(WebhookDelay)
            local OSTime = os.time()
            local playerLocalTime = os.date('*t', OSTime)
            local formattedLocalTime = string.format('%02d:%02d:%02d',
            playerLocalTime.hour,
            playerLocalTime.min,
            playerLocalTime.sec)
            
            local player = game.Players.LocalPlayer
            local playerUserId = player.UserId
            local playerProfileUrl = "https://www.roblox.com/users/" .. playerUserId .. "/profile"

            local MoneyPlayer = lp.leaderstats["C$"].Value
            local LvlPlayer = lp.leaderstats.Level.Value

            local Embed = {
                title = 'InfiniteWare Webhook',
                color = #000000,
                fields = {
                    { name = 'Player Profile', value = playerProfileUrl },
                    { name = '', value = '', },
                    { name = 'C$ - Money', value = '```' .. MoneyPlayer .. '```', inline = true },
                    { name = 'Fishing Level', value = '```' .. LvlPlayer .. '```', inline = true },
                    { name = '', value = '', },
                },
                timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ', OSTime),
            }
            local success, response = pcall(function()
                return (syn and syn.request or http_request) {
                    Url = WebhookUrl,
                    Method = 'POST',
                    Headers = { ['Content-Type'] = 'application/json' },
                    Body = game:GetService('HttpService'):JSONEncode({
                        username = 'InfiniteWare | Fisch',
                        avatar_url = 'https://cdn.discordapp.com/icons/1288516472888365147/0f9c85e2751924b591e18ef562e3769e.webp?size=96',
                        embeds = { Embed }
                    }),
                }
            end)
        end
    end)
end
function AntiLag()
	local Terrain = workspace:FindFirstChildOfClass('Terrain')
	Terrain.WaterWaveSize = 0
	Terrain.WaterWaveSpeed = 0
	Terrain.WaterReflectance = 0
	Terrain.WaterTransparency = 0
	Lighting.GlobalShadows = false
	for i,v in pairs(game:GetDescendants()) do
		if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
			v.Material = "Plastic"
			v.Reflectance = 0
		elseif v:IsA("Decal") then
			v.Transparency = 1
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime = NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1
			v.BlastRadius = 1
		end
	end
	for i,v in pairs(Lighting:GetDescendants()) do
		if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
			v.Enabled = false
		end
	end
	workspace.DescendantAdded:Connect(function(child)
		task.spawn(function()
			if child:IsA('ForceField') then
				RunService.Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Sparkles') then
				RunService.Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Smoke') or child:IsA('Fire') then
				RunService.Heartbeat:Wait()
				child:Destroy()
			end
		end)
	end)
end

---------FISH AUTO

local shakemethod


-- Utility functions
local utility = {blacklisted_attachments = {"bob", "bodyweld"}}; do
    function utility.simulate_click(x, y, mb)
        VirtualInputManager:SendMouseButtonEvent(x, y, 0, true, lp, 0)
        VirtualInputManager:SendMouseButtonEvent(x, y, 0, false, lp, 0)
    end

    function utility.move_fix(bobber)
        for index, value in bobber:GetDescendants() do
            if (value.ClassName == "Attachment" and table.find(utility.blacklisted_attachments, value.Name)) then
                value:Destroy()
            end
        end
    end
end

local farm = {reel_tick = nil, cast_tick = nil}; do

    function farm.find_rod()
        if not getCharacter() then return nil end

        for _, tool in ipairs(getCharacter():GetChildren()) do
            if tool:IsA("Tool") and (tool.Name:find("rod") or tool.Name:find("Rod")) then
                return tool
            end
        end
        return nil
    end


    function farm.cast()
        if not getCharacter() then return end

        local rod = farm.find_rod()
        if not rod then return end

        -- Instantly cast without cooldown
        local args = { [1] = 100.5, [2] = 1 }
        rod.events.cast:FireServer(unpack(args))
        farm.cast_tick = 0  -- Reset last cast time
    end

    function farm.shake()
        local shake_ui = PlayerGUI:FindFirstChild("shakeui")
        if shake_ui then
            local safezone = shake_ui:FindFirstChild("safezone")
            local button = safezone and safezone:FindFirstChild("button")
            if button then
                if getgenv().AutoFish then
                    button.Size = UDim2.new(9, 0, 9, 0)
                    button.Transparency = 1
                    button.ImageTransparency = 1
                    button.title.Text = ""
                else
                    button.Size = UDim2.new(1, 0, 1, 0)  -- Reset to default size if disabled
                    button.Transparency = 0
                    button.ImageTransparency = 0
                    button.title.Text = ""
                end
                if button.Visible then
                    if deviceType == "PC" then
						utility.simulate_click(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + button.AbsoluteSize.Y / 2, 0)
                        else
						utility.simulate_click(button.AbsolutePosition.X + button.AbsoluteSize.X / 1, button.AbsolutePosition.Y + button.AbsoluteSize.Y / 1, 0)
						end
					end
                end
            end
        end
    end

    function farm.reel()
        local reel_ui = PlayerGUI:FindFirstChild("reel")
        if not reel_ui then return end

        local reel_bar = reel_ui:FindFirstChild("bar")
        if not reel_bar then return end
       
        local reel_client = reel_bar:FindFirstChild("reel")
        if not reel_client then return end

        if reel_client.Disabled == true then
            reel_client.Disabled = false
        end
        local update_colors = getsenv(reel_client).UpdateColors

        -- Instant reel without waiting
        if update_colors then
            setupvalue(update_colors, 1, 101)
            ReplicatedStorage.events.reelfinished:FireServer(getupvalue(update_colors, 1), true)
        end
    end
   
end

PlayerGUI.ChildAdded:Connect(function(GUI)
    if GUI:IsA("ScreenGui") and GUI.Name == "shakeui" then
        if GUI:FindFirstChild("safezone") ~= nil then
            GUI.safezone.ChildAdded:Connect(function(child)
                if child:IsA("ImageButton") and child.Name == "button" then
                    if getgenv().autoShake == true then
                        task.wait()
                        if child.Visible == true then
                            while WaitForSomeone(RenderStepped) do
                                if GUI == nil then
                                    break
                                end
                                if getgenv().autoShake and child ~= nil and shakemethod == "Method Phantom" then
                                    task.wait()
                                    GuiService.SelectedObject = child
                                    if GuiService.SelectedObject == child then
                                        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                                        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
                                    end
                                else
                                    GuiService.SelectedObject = nil
                                    break
                                end
                            end
                        end
                    end
                end
            end)
        end
    end
end)


if  getgenv().AutoFish then
    CoreGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
    else
	CoreGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
	end

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "InfiniteWare",
    SubTitle = "Fisch",
    TabWidth = 140,
    Size = UDim2.fromOffset(530, 430),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Info = Window:AddTab({ Title = "Info", Icon = "" }),
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "folder-closed" }),
    Player = Window:AddTab({ Title = "Player", Icon = "person-standing" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Webhook = Window:AddTab({ Title = "Webhook", Icon = "clock" }),
    Credits = Window:AddTab({ Title = "Credits", Icon = "users-round" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" }),
}

local AutoFishSection = Tabs.Main:AddSection("Auto Fish")
AutoFishSection:AddKeybind("Keybind", {
    Title = "Auto Fish",
    Description = "",
    Mode = "Toggle", -- Always, Toggle, Hold
    Default = "F", -- String as the name of the keybind (MB1, MB2 for mouse buttons)
    Callback = function(Value)
            getgenv().AutoFish = Value
while getgenv().AutoFish == true do
    local rod = farm.find_rod()
    if rod then
        farm.cast()
        farm.shake()
        farm.reel()
    end
    task.wait()

end
end,

    -- Occurs when the keybind itself is changed, `New` is a KeyCode Enum OR a UserInputType Enum
ChangedCallback = function(New)
            getgenv().AutoFish = New
while getgenv().AutoFish == true do
    local rod = farm.find_rod()
    if rod then
        farm.cast()
        farm.shake()
        farm.reel()
    end
    task.wait()
end
end
})
 AutoFishSection:AddDropdown("", {
    Title = "Zone",
    Description = "",
    Values = {"Method Mouse Click","Method Phantom"},
    Multi = false,
    Callback = function(Value)
        shakemethod = Value
    end
})
AutoFishSection:AddToggle("",{
    Title = "Auto Fish", 
    Description = "Equip Rod First and u not Flying",
    Default = false;
    Callback = function(state)
    getgenv().AutoFish = state
while getgenv().AutoFish == true do
    local rod = farm.find_rod()
    if rod then
        farm.cast()
        farm.shake()
        farm.reel()
    end
    task.wait()
end
end})
AutoFishSection:AddToggle("",{
    Title = "Freeze", 
    Description = "",
    Default = false;
    Callback = function(state)
    FreezeCharr = state
            local oldpos = getRoot().CFrame
        task.wait()
        while WaitForSomeone(RenderStepped) do
            if FreezeCharr and getRoot() ~= nil then
                task.wait()
                getRoot().CFrame = oldpos
            else
                break
            end
        end
end})

AutoFishSection:AddToggle("",{
    Title = "Jesus", 
    Description = "",
    Default = false;
    Callback = function(state)
    getgenv().HardWater = state
    platsform()
end})

AutoFishSection:AddInput("Input", {
    Title = "Y offet",
    Description = "",
    Default = -4,
    Placeholder = -4,
    Numeric = true, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        yOffset = Value
    end
})
AutoFishSection:AddButton({
        Title = "Safe Spot",
        Description = "TP to safe spots",
        Callback = function()
            getRoot().CFrame = workspace:FindFirstChild("SafeSpots").CFrame + Vector3.new(0,3,0)
        end
})
local ZoneCast = Tabs.Main:AddSection("Zone Cast")

 ZoneCast:AddDropdown("", {
    Title = "Zone",
    Description = "",
    Values = {"Captain Goldfish","Ice Cave","Popular Zone","Isonade","Whale Shark","Golden Seahorse Abundance", "Bluefin Tuna Abundance","Nurse Shark Abundance", "Chinook Salmon Abundance","Swordfish Abundance", "Deep Ocean", "Desolate Deep", "Harvesters Spike", "Moosewood Docks", "Moosewood Ocean", "Moosewood Ocean Mythical", "Moosewood Pond", "Mushgrove Water", "Ocean", "Roslit Bay", "Roslit Bay Ocean", "Roslit Pond", "Roslit Pond Seaweed", "Scallop Ocean", "Snowcap Ocean", "Snowcap Pond", "Sunstone", "Terrapin Ocean", "The Arch", "Vertigo"},
    Multi = false,
    Callback = function(Value)
        selectedZoneCast = Value
    end
})

ZoneCast:AddToggle("",{
    Title = "Zone Cast", 
    Description = "",
    Default = false;
    Callback = function(state)
    getgenv().AutoZoneCast = state
    ZoneCasting()
end})
ZoneCast:AddButton({
        Title = "Check for Isonade",
        Description = "",
        Callback = function()
        for _,v in ipairs(FishingZonesFolder:GetChildren()) do
		if v:IsA("Part") and v.Name == "Isonade" then
		Fluent:Notify({Title = "InfiniteWare",Content = "Found " .. v.Name ,Duration = 3})	
        end
		end
    end
})
local SellSection = Tabs.Main:AddSection("Sell")
SellSection:AddButton({
        Title = "Sell one fish",
        Description = "Need to hold fish",
        Callback = function()
            SellFishAndReturnOne()
        end
})
SellSection:AddButton({
        Title = "Sell All fishs",
        Description = "Selling all fish anywhere!",
        Callback = function()
            Window:Dialog({
                Title = "You sure want sell all fish?",
                Content = "",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
                            SellFishAndReturnAll()
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                            print("k")
                        end
                    }
                }
            })
        end
})
SellSection:AddButton({
        Title = "Get Luck",
        Description = "Cost 5,000C$",
        Callback = function()
            GetLuckAndReturn()
        end
})
SellSection:AddButton({
        Title = "Get Enchant Relic",
        Description = "Cost 11,000C$",
        Callback = function()
            GetEnchantRelicAndReturn()
        end
})

local MapSection = Tabs.Main:AddSection("Treasurer Map")
MapSection:AddButton({
    Title = "Repair Map",
    Description = "Need to hold Map",
    Callback = function()
        RepairMapAndReturnOne()
    end
})
MapSection:AddButton({
    Title = "Get Chest",
    Description = "",
    Callback = function()
        GetChestAndReturnOne()
    end
})
---- MISC
local clickdelay = 0.5
Tabs.Misc:AddInput("Input", {
    Title = "Delay",
    Description = "For Auto Click",
    Default = 0.5,
    Placeholder = 0,
    Numeric = true, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        clickdelay = Value
    end
})
Tabs.Misc:AddToggle("",{
    Title = "Auto Click", 
    Description = "",
    Default = false;
    Callback = function(state)
    getgenv().AutoClick = state
    while getgenv().AutoClick do
		VirtualUser:CaptureController()
        VirtualUser:ClickButton1(Vector2.new())
    task.wait(clickdelay)
    end
end})

Tabs.Misc:AddButton({
    Title = "Enchant",
    Description = "TP to enchater (for now) ",
    Callback = function()
        getRoot().CFrame = CFrame.new(1310.54651, -799.469604, -82.7303467, 0.999973059, 0, 0.00733732153, 0, 1, 0, -0.00733732153, 0, 0.999973059)
    end
})
Tabs.Misc:AddButton({
    Title = "Bypass Fish Radar",
    Description = "",
    Callback = function()
        for _,v in ipairs(zone:GetDescendants()) do
	        if v:IsA("BillboardGui") and v.Name == "radar1" or v.Name == "radar2" then
		    v.Enabled = true
        break
	end
    end
    end
})
Tabs.Misc:AddButton({
    Title = "Fix Hud not showing",
    Description = "",
    Callback = function()
        RunService.Stepped:Connect(function()
			if PlayerGui:FindFirstChild("hud").Enabled == false then
				PlayerGui:FindFirstChild("hud").Enabled = true
			end
		end)
    end
})
Tabs.Misc:AddButton({
    Title = "Anti Lag ",
    Description = "",
    Callback = function()
        AntiLag()
    end
})
Tabs.Misc:AddButton({
    Title = "Remove Blur ",
    Description = "",
    Callback = function()
        for _,v in ipairs(Lighting:GetDescendants()) do
            if v.Name == "uiblur" or v.Name == "uicc" or v.Name == "underwaterbl" or v.Name == "underwatercc" then
                v:Destroy()
                break
            end
        end
    end
})
Tabs.Misc:AddButton({
    Title = "Brine Pool AntiKill ",
    Description = "",
    Callback = function()
        for _,v in ipairs(workspace.zones.fishing["Brine Pool Water"]:GetDescendants()) do
            if v.Name == "Brinekiller" or v.Name == "TouchInterest" then
                v:Destroy()
                break
            end
        end
    end
})
Tabs.Misc:AddButton({
    Title = "FullBright and no Fog",
    Description = "",
    Callback = function()
        RunService.RenderStepped:Connect(function()
            Lighting.Brightness = 2
            Lighting.FogEnd = 9e9
            Lighting.GlobalShadows = false
            Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
            Lighting:FindFirstChild("atmos").Density = 0
        end)
    end
})
Tabs.Misc:AddButton({
    Title = "Instant ProximityPrompt ",
    Description = "for faster crab cage",
    Callback = function()
    instantpp()
    end
})
Tabs.Misc:AddButton({
    Title = "No Rain",
    Description = "",
    Callback = function()
        spawn(function()
		    if workspace.Camera:FindFirstChild("__RainEmitter") then
                workspace.Camera:FindFirstChild("__RainEmitter"):Destroy()
            end
		end)
    end
})

Tabs.Misc:AddToggle("",
{
    Title = "No Chat", 
    Description = "",
    Default = false,
    Callback = function(v)

end})
Tabs.Misc:AddToggle("",
{
    Title = "Day time", 
    Description = "",
    Default = false,
    Callback = function(v)
        getgenv().day  = v
    end
})

Tabs.Misc:AddToggle("",
{
    Title = "No Flags", 
    Description = "",
    Default = false,
    Callback = function(v)
        while v do
            for _,v2 in ipairs(ActiveFolder:WaitForChild("flags"):GetChildren()) do
                if v2:IsA("Model") then
                    v2:Destroy()
                end
            end
            if v == false then break end
            task.wait(0.10)
        end
    end
})
Tabs.Misc:AddToggle("",
{
    Title = "Disabled Oxygen", 
    Description = "",
    Default = false,
    Callback = function(v)
        if v == true then
            if getCharacter() ~= nil and getCharacter():FindFirstChild("client"):WaitForChild("oxygen") ~= nil and getCharacter():FindFirstChild("client"):WaitForChild("oxygen").Enabled == true then	
                getCharacter().client.oxygen.Enabled = false	
            end
        else	
            if getCharacter() ~= nil and getCharacter():FindFirstChild("client"):WaitForChild("oxygen") ~= nil and getCharacter():FindFirstChild("client"):WaitForChild("oxygen").Enabled == false then	
                getCharacter().client.oxygen.Enabled = true	
            end	
        end
    end
})
------------///PLAYERS

Tabs.Player:AddToggle("", 
{
    Title = "No Clip", 
    Description = "",
    Default = false,
    Callback = function(v)
        getgenv().noclip = v
    end
})

Tabs.Player:AddToggle("", 
{
    Title = "Fly Mobile", 
    Description = "",
    Default = false,
    Callback = function(v)
        FLYING = v
        if FLYING then
            NOFLY()
            wait()
            sFLY()
        else
            NOFLY()
        end
    end
})
Tabs.Player:AddKeybind("Keybind", {
    Title = "Fly",
    Description = "",
    Mode = "Toggle", -- Always, Toggle, Hold
    Default = "V", -- String as the name of the keybind (MB1, MB2 for mouse buttons)
    Callback = function(v)
        FLYING = v
        if FLYING then
            NOFLY()
            wait()
            sFLY()
        else
            NOFLY()
        end
    end,
    ChangedCallback = function(v)
        FLYING = v
        if FLYING then
            NOFLY()
            wait()
            sFLY()
        else
            NOFLY()
        end
    end
})

Tabs.Player:AddSlider("Slider", {
    Title = "Fly Speed",
    Description = "",
    Default = 1,
    Min = 1,
    Max = 10,
    Rounding = 1,
    Callback = function(Value)
        _G.FLYSPEED = Value
    end
})


--------------//////////TELEPORT



local SpotsTeleport = Tabs.Teleport:AddSection("Teleport Spots")
local TPSpotsValue 
SpotsTeleport:AddDropdown("", {
    Title = "Teleport Spots",
    Description = "",
    Values = teleportSpots,
    Multi = false,
    Default = nil,
    Callback = function(Value)
        TPSpotsValue = Value
    end
})

SpotsTeleport:AddButton({
    Title = "Teleport",
    Description = "",
    Callback = function()
		repeat getRoot().CFrame = TpSpotsFolder:FindFirstChild(TPSpotsValue).CFrame + Vector3.new(0, 5, 0) until game:IsLoaded()
    end
})
SpotsTeleport:AddButton({
    Title = "Refresh",
    Description = "",
    Callback = function()
    for i, v in pairs(TpSpotsFolder:GetChildren()) do
    if table.find(teleportSpots, v.Name) == nil then
        table.insert(teleportSpots, v.Name)
    end
    end


end})
local NpcTeleport = Tabs.Teleport:AddSection("Teleport NPC")
local TPNPCValue 
NpcTeleport:AddDropdown("", {
    Title = "Teleport NPC",
    Description = "",
    Values = NPCs,
    Multi = false,
    Default = nil,
    Callback = function(Value)
        TPNPCValue = Value
    end
})
NpcTeleport:AddButton({
    Title = "Teleport",
    Description = "",
    Callback = function()
		repeat getRoot().CFrame = NpcFolder:FindFirstChild(TPNPCValue):WaitForChild("HumanoidRootPart").CFrame + Vector3.new(0, 1, 0) until game:IsLoaded()
    end
})
NpcTeleport:AddButton({
    Title = "Refresh",
    Description = "",
    Callback = function()
for i, v in pairs(NpcFolder:GetChildren()) do
    if table.find(NPCs, v.Name) == nil and v.Name ~= "mirror Area" then
        table.insert(NPCs, v.Name)
    end
end
end})
local ItemTeleport = Tabs.Teleport:AddSection("Teleport Items")

local TPItemsValue 
ItemTeleport:AddDropdown("", {
    Title = "Teleport Items",
    Description = "",
    Values = {"Bait_Crate", "Carbon_Rod", "Crab_Cage", "Fast_Rod", "Flimsy_Rod", "GPS", "Long_Rod", "Lucky_Rod", "Plastic_Rod", "Training_Rod", "Steady_Rod", "Rapid_Rod","Glider","Fortune_Rod","Fish_Radar", "King_Rod", "Nocturnal_Rod","Trident","Aurora_Totem","Quality_Bait_Crate","Magnet_Rod"},
    Multi = false,
    Default = nil,
    Callback = function(Value)
        TPItemsValue = Value
    end
})
ItemTeleport:AddButton({
    Title = "Teleport",
    Description = "",
    Callback = function()
		repeat getRoot().CFrame = itemSpots[TPItemsValue] until game:IsLoaded()
    end
})

-------////WEBHOOK////----------------
Tabs.Webhook:AddInput("", {
    Title = "Webhook url",
    Description = "",
    Default = "paste webhook url here",
    Placeholder = "paste webhook url here",
    Numeric = false, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        WebhookUrl = Value
    end
})
Tabs.Webhook:AddInput("", {
    Title = "Delay",
    Description = "60 secs is stable",
    Default = "",
    Placeholder = "60",
    Numeric = true, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        WebhookDelay = Value
    end
})
Tabs.Webhook:AddToggle("",{
    Title = "Webhook", 
    Description = "Setup the aboves first",
    Default = false;
    Callback = function(state)
    getgenv().WebhookLog = state
    WebhookManager()
end})

Tabs.Credits:AddParagraph({
    Title = "kylosilly",
    Content = "for tp value and noclip"
})
Tabs.Credits:AddParagraph({
    Title = "netpa",
    Content = "for auto cast"
})

Fluent:Notify({
    Title = "Anti Afk - Loaded",
    Content = "",
    Duration = 30
})



if deviceType == "Mobile" or "PC" then
    local A = Instance.new("ScreenGui")
    local B = Instance.new("ImageButton")
    local C = Instance.new("UICorner")

    A.Name = "InfinitWare"
    A.Parent = game.CoreGui
    A.ResetOnSpawn = false

    B.Size = UDim2.new(0, 50, 0, 50)
    B.Position = UDim2.new(0, 10, 1, -60) -- Consider making this responsive
    B.BackgroundColor3 = Color3.fromRGB(128, 0, 128)
    B.Image = "rbxassetid://140608874147886"
    B.Transparency = 0.5
    B.Parent = A
    B.Draggable = true
    local function toggleVisibility(frame)
        for _, child in ipairs(frame:GetDescendants()) do
            if child:IsA("TextLabel") then
                child.Parent.Visible = not child.Parent.Visible
                toggleVisibility(child)
            end
        end
    end

    B.MouseButton1Click:Connect(function()
        local spaceGui = game.CoreGui:FindFirstChild("ScreenGui") -- Replace with the actual name
        if spaceGui then
            toggleVisibility(spaceGui)
        else
            warn("1")
        end
    end)

    C.CornerRadius = UDim.new(1, 0)
    C.Parent = B
end

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("InfiniteWare")
SaveManager:SetFolder("InfiniteWare/Fisch")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
Window:SelectTab(1)
Fluent:Notify({
    Title = "InfiniteWare",
    Content = "The script has been loaded.",
    Duration = 5
})
SaveManager:LoadAutoloadConfig()
